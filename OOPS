#Challenge 1: Square Numbers and Return Their Sum
class Point():
    def __init__(self,x,y,z):
        self.x=x
        self.y=y
        self.z=z
    def sqSum(self):
        return self.x**2+self.y**2+self.z**2
m=Point(1,3,5)
print(m.sqSum())

#Challenge 2: Implement a Calculator Class
class Calculator():
    def __init__(self,num1,num2):
        self.num1=num1
        self.num2=num2
    def add(self):
        print (self.num1+self.num2)
    def subtract(self):
        print (self.num2-self.num1)
    def multiply(self):
        print (self.num1*self.num2)    
    def divide(self):
        print (self.num2/self.num1)
obj = Calculator(10, 94)
obj.add()
obj.subtract()
obj.multiply()
obj.divide()

#Challenge 2: Implement a Calculator Class
class Calculator():
    def __init__(self,num1,num2):
        self.num1=num1
        self.num2=num2
    def add(self):
        return (self.num1+self.num2)
    def subtract(self):
        return (self.num2-self.num1)
    def multiply(self):
        return (self.num1*self.num2)    
    def divide(self):
        return (self.num2/self.num1)
obj = Calculator(10, 94)
print(obj.add())
print(obj.subtract())
print(obj.multiply())
print(obj.divide())

#Challenge 4: Implement a Banking Account
class Account:
    def __init__(self,title=None,Balance=0):
        self.title=title
        self.Balance=Balance
class SavingsAccount(Account):
    def __init__(self,title=None,Balance=0,interestRate=0):
        self.interestRate=interestRate
        Account.__init__(self,title,Balance)
obj1=SavingsAccount("Ashish", 5000,5)
print(obj1.title)
print(obj1.Balance)
print(obj1.interestRate)

#Challenge 4: Implement a Banking Account
class Account:
    def __init__(self,title=None,Balance=0):
        self.title=title
        self.Balance=Balance
class SavingsAccount(Account):
    def __init__(self,title=None,Balance=0,interestRate=0):
        self.interestRate=interestRate
        super().__init__(title,Balance)
obj=SavingsAccount("Ashish", 5000,5)
print(obj.title)
print(obj.Balance)
print(obj.interestRate)

#Challenge 4: Implement a Banking Account
class Account:
    def __init__(self,title=None,Balance=0):
        self.title=title
        self.Balance=Balance
class SavingsAccount(Account):
    def __init__(self,interestRate=0):
        self.interestRate=interestRate
obj=Account("Ashish", 5000)
print(obj.title)
print(obj.Balance)
obj1=SavingsAccount(5)
print(obj1.interestRate)

#Challenge 3: Implement the Complete Student Class
class Student:
    def setName(self,Name):
        self.__Name=Name
    def getName(self):
       return self.__Name
    def setRollnumber(self,Rollnumber):
        self.__Rollnumber=Rollnumber
    def getRollnumber(self):
        return self.__Rollnumber
x=Student()
x.setName("Jai")
x.setRollnumber("05")
print("Name:",x.getName())
print("Rollnumber:",x.getRollnumber())
 
#Challenge 5: Handling a Bank Account
class Account:
    def __init__(self,title=None,balance=0):
        self.title = title
        self.balance = balance
    def withdrawal(self,amount):
        self.balance=self.balance-amount
    def deposit(self,amount):
        self.balance=self.balance+amount
    def getBalance(self):
        return self.balance
class SavingsAccount(Account):
    def __init__(self, title=None, balance=0, interestRate=0):
        super().__init__(title,balance)
        self.interestRate = interestRate
    def interestAmount(self):
        return (self.balance*self.interestRate)/100
x = SavingsAccount("Ashish", 5540, 3)
print("Balance:",x.getBalance())
x.deposit(1000)
print("Balance after deposit:",x.getBalance())
x.withdrawal(500)
print("Balance after withdrawal:",x.getBalance())
print("Interestramount:",x.interestAmount())
